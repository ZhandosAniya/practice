import logging
from main import TOKEN
from aiogram import Bot, Dispatcher, types, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start', 'menu'])
async def start(message: types.Message):
    # –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    text = "–ü—Ä–∏–≤–µ—Ç! –•–æ—á–µ—à—å —Ç–∞–∫–æ–π –∂–µ –∫—Ä–∞—Å–∏–≤—ã–π –º–∞–Ω–∏–∫—é—Ä? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –∫ –Ω–∞–º, 10% —Å–∫–∏–¥–∫–∞ —Ç–æ–º—É –∫—Ç–æ –∑–∞–ø–∏—à–µ—Ç—Å—è —Å–µ–π—á–∞—Å! üòç‚ú®"

    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Ñ–æ—Ç–æ
    photo_path = "–º–∞–Ω–∏–∫.JPG"

    # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton("–û –Ω–∞—Å üòé", callback_data='about'),
        types.InlineKeyboardButton("–£—Å–ª—É–≥–∏  üóíÔ∏è", callback_data='services'),
        types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è üëç", callback_data='book'),
        types.InlineKeyboardButton("–°–≤—è–∑—å —Å –Ω–∞–º–∏ ‚ù§Ô∏è", callback_data='contact')
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await bot.send_photo(chat_id=message.chat.id, photo=open(photo_path, 'rb'), caption=text, reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler(lambda query: True)
async def process_callback(query: types.CallbackQuery):
    choice = query.data

    if choice == 'about':
        await query.answer("–¢—ã –Ω–µ –ø–æ–∂–∞–ª–µ–µ—à—åüòç")

        text_about = "–ü—Ä–∏–≤–µ—Ç –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–∏—è, –∏ —è —Ä–∞–±–æ—Ç–∞—é –º–∞—Å—Ç–µ—Ä–æ–º –º–∞–Ω–∏–∫—é—Ä–∞ –±–æ–ª–µ–µ 2 –ª–µ—Ç. –ë–æ–ª–µ–µ 2000 —Ç—ã—Å—è—á–∏ –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤‚ù§Ô∏è‚úÖ"

        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Ñ–æ—Ç–æ –ú–æ–∏ —Ä–∞–±–æ—Ç—ã
        my_works_photo_path = "–∞–Ω–∏—è.jpg"

        # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ú–æ–∏ —Ä–∞–±–æ—Ç—ã –∏ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(
            types.InlineKeyboardButton("–ú–æ–∏ —Ä–∞–±–æ—Ç—ã üòç", url="https://instagram.com/justaniya_nail?igshid=YmMyMTA2M2Y="),
            types.InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô", callback_data='main_menu')
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ú–æ–∏ —Ä–∞–±–æ—Ç—ã —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
        await bot.send_photo(chat_id=query.message.chat.id, photo=open(my_works_photo_path, 'rb'), caption=text_about, reply_markup=markup)

    elif choice == 'services':

        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Ñ–æ—Ç–æ —É—Å–ª—É–≥
        services_photo_path = "service.png"

        # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∏ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(
            types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è‚úÖ", url="https://dikidi.net/ru/profile/aniya_bot_1135255"),
            types.InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô", callback_data='main_menu')
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —É—Å–ª—É–≥ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
        await bot.send_photo(chat_id=query.message.chat.id, photo=open(services_photo_path, 'rb'), reply_markup=markup)

    elif choice == 'book':

        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(
            types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è‚úÖ", url="https://dikidi.net/ru/profile/aniya_bot_1135255"),
            types.InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô", callback_data='main_menu')
        )
        await bot.send_message(chat_id=query.message.chat.id, text="–°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–∞—Åüòç", reply_markup=markup)

    elif choice == 'contact':
        await query.answer("–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—É—é —Å–æ—Ü.—Å–µ—Ç—å –¥–ª—è —Å–≤—è–∑–∏")

        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(
            types.InlineKeyboardButton("Inst", url="https://www.instagram.com/_justaniya_/"),
            types.InlineKeyboardButton("WhatsApp", url="https://wa.me/77763302284"),
            types.InlineKeyboardButton("Telegram", url="https://t.me/justaniya"),
            types.InlineKeyboardButton("–ù–∞–∑–∞–¥üîô", callback_data='main_menu')
        )

        await bot.send_message(chat_id=query.message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—É—é —Å–æ—Ü.—Å–µ—Ç—å –¥–ª—è —Å–≤—è–∑–∏üìû:", reply_markup=markup)

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    elif choice == 'main_menu':
        await start(query.message)  # –í—ã–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start —Å–Ω–æ–≤–∞

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
